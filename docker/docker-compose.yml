x-airflow-common:
  &airflow-common
  build:
    context: ./airflow
    dockerfile: Dockerfile
  image: custom-airflow:latest
  env_file:
    - ../.env
  volumes:
    - ../dags:/opt/airflow/dags
    - ../logs:/opt/airflow/logs
    - ../plugins:/opt/airflow/plugins
    - ../data:/opt/airflow/data
    - ../scripts:/opt/airflow/scripts
    - ../config/airflow.cfg:/opt/airflow/airflow.cfg
    - ../dbt/marketing_pipeline:/opt/dbt/marketing_pipeline
    - ../config/profiles.yml:/home/airflow/.dbt/profiles.yml

  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    restart: always
    networks:
      - airflow

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: always
    networks:
      - airflow

  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow-triggerer
    command: triggerer
    restart: always
    networks:
      - airflow


  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ../minio/data:/data
    networks:
      - airflow

volumes:
  postgres_data:

networks:
  airflow:
    driver: bridge